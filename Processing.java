/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ali_rice;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAMAL
 */
public class Processing extends javax.swing.JFrame {

    /**
     * Creates new form Processing
     */
    public Processing() {
        initComponents();
        LoadArticleNoCombo();
        LoadLocation();
    }
    String driver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
    String url="jdbc:sqlserver://localhost:1433;databaseName=AliDB";
    String user="l134088";
    String pass="sofabulous12";

    // create default vector 
    float totalHeadRiceWeight = 0 , remweight =0;
    float rateweightsForPL = 0;
    Vector<Float> bags_to_deduct = new Vector<Float>();
    Vector<Float> sizeOfBags = new Vector<Float>();
    Vector<Float> headRice = new Vector<Float>();
    Vector<Integer> bills = new Vector<Integer>();
    Vector <Float> weights= new Vector<Float>();
    Vector <Float> Oweights= new Vector<Float>();
    Vector <Float> total_bags_out= new Vector<Float>();
    Vector <Float> size_out= new Vector<Float>();
    Vector <Float> totalBagsVector= new Vector<Float>();
    Vector <Float> perBagSizeVector= new Vector<Float>();
    Vector <Float> rate_outVector= new Vector<Float>();
    Vector <Float> weight_out= new Vector<Float>();
    Vector <Float> originalPerBagSize= new Vector<Float>();
    Vector <String> NewArtcileNames = new Vector <String>();
    int idOfProduct ;float extra_rate; float rateOfProcessed;
    boolean typeOf = false;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        inputProcessing = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        weightcombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        totla_bags_field = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        articlenocombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        supplier_name_field = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        rate_field = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        howdyNumberfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        articleLabel1 = new javax.swing.JLabel();
        idCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        input_processing_table = new javax.swing.JTable();
        inputProcessing2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        totla_bags_field_out = new javax.swing.JTextField();
        articlenocomboOut = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        sizefieldout = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        weightFieldOut = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        rate_out = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Output_table = new javax.swing.JTable();
        bagsSum = new javax.swing.JTextField();
        weightkgSum = new javax.swing.JTextField();
        totalamountInput = new javax.swing.JTextField();
        totalamountOutput = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        millchargesfield = new javax.swing.JTextField();
        bardanafield = new javax.swing.JTextField();
        karayafield = new javax.swing.JTextField();
        otherfield = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        onekg = new javax.swing.JTextField();
        fortykg = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        fiftykg = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        locationcombo = new javax.swing.JComboBox<>();
        locationChange = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        inputBagFieldRate = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Processing");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(583, 11, -1, 32));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Article name");

        weightcombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        weightcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightcomboActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Total Bags");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Weight");

        articlenocombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        articlenocombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        articlenocombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articlenocomboActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel5.setText("Bought from:");

        supplier_name_field.setText("_______");

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel6.setText("At Rate:");

        rate_field.setText("_______");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Size");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Houdi No.");

        articleLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        articleLabel1.setText("Article ID");

        idCombo.setPreferredSize(new java.awt.Dimension(60, 23));
        idCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                idComboMouseEntered(evt);
            }
        });
        idCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputProcessingLayout = new javax.swing.GroupLayout(inputProcessing);
        inputProcessing.setLayout(inputProcessingLayout);
        inputProcessingLayout.setHorizontalGroup(
            inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputProcessingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputProcessingLayout.createSequentialGroup()
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputProcessingLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(44, 44, 44)
                                .addComponent(howdyNumberfield, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(inputProcessingLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(26, 26, 26)
                                .addComponent(articlenocombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rate_field, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(supplier_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(inputProcessingLayout.createSequentialGroup()
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(articleLabel1)
                            .addComponent(jLabel4))
                        .addGap(40, 40, 40)
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputProcessingLayout.createSequentialGroup()
                                .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(totla_bags_field, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jTextField2))
                                .addGap(86, 86, 86)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(weightcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        inputProcessingLayout.setVerticalGroup(
            inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputProcessingLayout.createSequentialGroup()
                .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputProcessingLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(howdyNumberfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(articlenocombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(inputProcessingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(supplier_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rate_field, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(22, 22, 22)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(articleLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(8, 8, 8)
                .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputProcessingLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputProcessingLayout.createSequentialGroup()
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(totla_bags_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inputProcessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(28, 28, 28))
        );

        getContentPane().add(inputProcessing, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 220));

        input_processing_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Total amount", "Rate", "Bags", "Weight Kg", "Name"
            }
        ));
        jScrollPane1.setViewportView(input_processing_table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 275, 577, 240));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Article");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Total Bags");

        totla_bags_field_out.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totla_bags_field_outKeyPressed(evt);
            }
        });

        articlenocomboOut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        articlenocomboOut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Head Rice", "Tota", "Naku", "Safai", "Powder", "Komi Safai", "Rail Wand" }));
        articlenocomboOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articlenocomboOutActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("Size");

        sizefieldout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sizefieldoutKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sizefieldoutKeyReleased(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Weight");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Rate");

        rate_out.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rate_outKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout inputProcessing2Layout = new javax.swing.GroupLayout(inputProcessing2);
        inputProcessing2.setLayout(inputProcessing2Layout);
        inputProcessing2Layout.setHorizontalGroup(
            inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputProcessing2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputProcessing2Layout.createSequentialGroup()
                        .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addGap(40, 40, 40)
                        .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputProcessing2Layout.createSequentialGroup()
                                .addComponent(totla_bags_field_out, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 158, Short.MAX_VALUE))
                            .addGroup(inputProcessing2Layout.createSequentialGroup()
                                .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(rate_out, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(weightFieldOut)
                                    .addComponent(sizefieldout))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))))
                    .addGroup(inputProcessing2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(76, 76, 76)
                        .addComponent(articlenocomboOut, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        inputProcessing2Layout.setVerticalGroup(
            inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputProcessing2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(articlenocomboOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(inputProcessing2Layout.createSequentialGroup()
                        .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(totla_bags_field_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(sizefieldout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(weightFieldOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inputProcessing2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(rate_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(inputProcessing2Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addGap(24, 24, 24))
        );

        getContentPane().add(inputProcessing2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 60, -1, 200));

        Output_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Total amount", "Rate", "Bags", "Weight Kg", "Name"
            }
        ));
        jScrollPane2.setViewportView(Output_table);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 275, 448, 240));

        bagsSum.setEditable(false);
        getContentPane().add(bagsSum, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 520, 100, -1));

        weightkgSum.setEditable(false);
        getContentPane().add(weightkgSum, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 520, 100, -1));

        totalamountInput.setEditable(false);
        getContentPane().add(totalamountInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 101, -1));

        totalamountOutput.setEditable(false);
        totalamountOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalamountOutputActionPerformed(evt);
            }
        });
        getContentPane().add(totalamountOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 536, 120, -1));

        jSeparator1.setBackground(new java.awt.Color(153, 153, 153));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 53, 8, 520));

        jLabel11.setText("Bardana");

        jLabel12.setText("Karaya");

        jLabel10.setText("Mill Charges");

        jLabel13.setText("Others");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel18.setText("Per Kg final weight");

        jLabel20.setText("40 kg");

        jLabel21.setText("50 kg");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(karayafield, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bardanafield, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(millchargesfield, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(otherfield, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fiftykg, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fortykg, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onekg, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(millchargesfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bardanafield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(karayafield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(otherfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(onekg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(fortykg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(fiftykg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1081, 54, -1, -1));

        jButton5.setBackground(new java.awt.Color(51, 255, 0));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("Save");
        jButton5.setMaximumSize(new java.awt.Dimension(57, 25));
        jButton5.setMinimumSize(new java.awt.Dimension(57, 25));
        jButton5.setPreferredSize(new java.awt.Dimension(57, 25));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1153, 482, 110, 43));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1061, 54, -1, 519));

        locationcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        getContentPane().add(locationcombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1208, 360, 105, -1));

        locationChange.setText("Change");
        locationChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationChangeActionPerformed(evt);
            }
        });
        getContentPane().add(locationChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(1208, 386, 105, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("Location:");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(1095, 360, -1, -1));

        jLabel9.setText("Price per bag:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 560, -1, -1));

        inputBagFieldRate.setText("______________");
        getContentPane().add(inputBagFieldRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 560, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void articlenocomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articlenocomboActionPerformed
        idCombo.removeAllItems();

        
        
        try {
            ResultSet rs = null;
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement stmt = con.createStatement();

            String query = null;
            PreparedStatement pst = null;

            query = "select id from Product_details_table where name=?";
            pst = con.prepareStatement(query);
            pst.setString(1, articlenocombo.getSelectedItem().toString());
            rs = pst.executeQuery();

            while (rs.next()) {
                String s = rs.getString(1);
                idCombo.addItem(s);
            }

            
        } catch (Exception e) {

        }
  
    }//GEN-LAST:event_articlenocomboActionPerformed
   public float getSum(JTable table,int colNo)
   {
            float sumForcash=0; float num;
            for(int i=0;i<table.getRowCount();i++)
            {
                if (!table.getValueAt(i, colNo).toString().equals("-"))
                {
                    num=Float.parseFloat(table.getValueAt(i, colNo).toString());
                    sumForcash=sumForcash+num;
                }

            }

            return sumForcash;	
   }
    private void weightcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightcomboActionPerformed
        // TODO add your handling code here:
        LoadSupplierNameAndRate();
        
    }//GEN-LAST:event_weightcomboActionPerformed

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        bags_to_deduct.add(Float.parseFloat(totla_bags_field.getText()));
        sizeOfBags.add(Float.parseFloat(jTextField2.getText()));
        totalBagsVector.add(Float.parseFloat(totla_bags_field.getText()));
        perBagSizeVector.add(Float.parseFloat(jTextField2.getText()));
        
        try
        {
                Class.forName(driver);
                Connection con=DriverManager.getConnection(url,user,pass);
                // Step 2.B: Creating JDBC Statement 
                Statement stmt = con.createStatement();
                String query;
                query= "SELECT original_weight,weight FROM Product_details_table where name=? and id=?";
                PreparedStatement pst=con.prepareStatement(query);

                pst.setString(1, articlenocombo.getSelectedItem().toString());
                pst.setString(2, idCombo.getSelectedItem().toString());
                ResultSet rs = pst.executeQuery();
                String s;
                while(rs.next()){
                    s=rs.getString(2);
                    originalPerBagSize.add(Float.parseFloat(s));
                }
        
                 //     Getting ID

                query= "SELECT id FROM Product_details_table where name=? and original_weight=? and supplier_name=?";
                pst=con.prepareStatement(query);

                pst.setString(1, articlenocombo.getSelectedItem().toString());
                pst.setString(2, weightcombo.getSelectedItem().toString());
                pst.setString(3, supplier_name_field.getText());
                
                rs = pst.executeQuery();
                    
                if(rs.next()){
                    s=rs.getString(1);
                    bills.add(Integer.parseInt(s));
        
        } 
        }
        catch(Exception e)
                {}
        AddDataToTable();
        
        
        totla_bags_field.setText("");
        jTextField2.setText("");
        
        try{
            weightcombo.removeAllItems();
        }
        catch(java.lang.NullPointerException  e)
        {
            
        }
        idCombo.removeAllItems();
        inputBagFieldRate.setText(Float.toString(Float.parseFloat(totalamountInput.getText())/ Float.parseFloat(weightkgSum.getText())));
          
    }//GEN-LAST:event_jButton1ActionPerformed

     
    private void articlenocomboOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articlenocomboOutActionPerformed
        // TODO add your handling code here:
        if(articlenocomboOut.getSelectedItem().toString().equals("Head Rice"))
        {
            rate_out.setEnabled(false);
        }
        else
        {
            rate_out.setEnabled(true);
        }
    }//GEN-LAST:event_articlenocomboOutActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
      
        
        boolean check ;
        if(articlenocomboOut.getSelectedItem().toString().equals("Head Rice"))
        {
            check= false;
            AddDataToTableOutPut(check);
        }
        else
        {
            check =true;
            AddDataToTableOutPut(check);
        }
        sizefieldout.setText("");
        weightFieldOut.setText("");
        rate_out.setText("");
        totla_bags_field_out.setText("");

    }//GEN-LAST:event_jButton4ActionPerformed

    private void totla_bags_field_outKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totla_bags_field_outKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_totla_bags_field_outKeyPressed

    private void sizefieldoutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sizefieldoutKeyPressed
        // TODO add your handling code here:
     //   weightFieldOut.setText(Float.toString(Float.parseFloat(totla_bags_field_out.getText()) * Float.parseFloat(sizefieldout.getText())));
        
    }//GEN-LAST:event_sizefieldoutKeyPressed

    private void sizefieldoutKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sizefieldoutKeyReleased
        // TODO add your handling code here:
          weightFieldOut.setText(Float.toString(Float.parseFloat(totla_bags_field_out.getText()) * Float.parseFloat(sizefieldout.getText())));
     
    }//GEN-LAST:event_sizefieldoutKeyReleased

    private void rate_outKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rate_outKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_rate_outKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if( millchargesfield.getText().isEmpty())
        {
            millchargesfield.setText("0");
        }
        if( bardanafield.getText().isEmpty())
        {
            bardanafield.setText("0");
        }
        if( karayafield.getText().isEmpty())
        {
            karayafield.setText("0");
        }
        if( otherfield.getText().isEmpty())
        {
            otherfield.setText("0");
        }
        float sum=0;
        for(int i=0; i < headRice.size();i++)
        {
            sum =sum + headRice.get(i);
        }
        float weightInKg =  (Float.parseFloat(totalamountInput.getText()) -  Float.parseFloat(totalamountOutput.getText()) )/ sum;
        float totalSumExtra = Float.parseFloat(millchargesfield.getText()) + Float.parseFloat(bardanafield.getText()) + Float.parseFloat(karayafield.getText()) + Float.parseFloat(otherfield.getText());
        
        float total= weightInKg + totalSumExtra;
        onekg.setText(Float.toString(total));
        fortykg.setText(Float.toString(total*40));
        fiftykg.setText(Float.toString(total*50));
        
        
    }//GEN-LAST:event_jButton2ActionPerformed
    public void deductpl_table(int billNo , float w)
    {
//    query= "SELECT rate  from  Product_details_table where id = ?";
//            PreparedStatement pst = con.prepareStatement(query);
//            pst.setFloat(1, billNo);
//            rs = stmt.executeQuery();
//
//            if (rs.next()) {
//
//                String s = rs.getString("previousOrdered");
//
//                old_weight_p = Float.parseFloat(s);
//            }
        float r =1;
         try{
                ResultSet rs=null;
                Class.forName(driver);
                Connection con=DriverManager.getConnection(url,user,pass);
                // Step 2.B: Creating JDBC Statement 
                Statement stmt = con.createStatement();
                String query;

                query =("SELECT rate  from  Product_details_table where id = ?");
                PreparedStatement pst = con.prepareStatement(query);
                pst.setInt(1, billNo);
                while(rs.next()){
                    String s=rs.getString(1);
                    r = Float.parseFloat(s);
                }
                java.util.Date now = new java.util.Date();
                SimpleDateFormat extractMonth = new SimpleDateFormat("MM"); // two digit numerical represenation
                String strMonth = extractMonth.format(now);     
                SimpleDateFormat extractYear = new SimpleDateFormat("YYYY"); // four digit numerical represenation
                String strYear = extractYear.format(now);     

                int todaysmonth = Integer.parseInt(strMonth);
                int todaysyear = Integer.parseInt(strYear);
                query= "UPDATE  pl_table SET [ordered] =[ordered] - ?  WHERE Year(date)='"+todaysyear+"' AND Month(date)='"+todaysmonth+"'";
                pst=con.prepareStatement(query);

                pst.setFloat(1, r  * w);

                pst.executeUpdate();
         }
         catch(Exception e)
        {
            //JOptionPane.showMessageDialog(this,e.toString() );                    
        }
    }
    public void deduct(int billNo, int weightsIndex)
    {
        float w =weights.get(weightsIndex);
        float updateRemainingweightValue = Oweights.get(weightsIndex) - w ;
        
        deductpl_table(billNo ,w  );
        try
        {
            
            float bagsToDeduct ;
            float num_bags = (totalBagsVector.get(weightsIndex));
            float weightPerBag = (perBagSizeVector.get(weightsIndex));
            float totalWeight = num_bags * weightPerBag;
            bagsToDeduct = (totalWeight / originalPerBagSize.get(weightsIndex));
            ResultSet rs = null;
            Class.forName(driver);
            Connection con=DriverManager.getConnection(url,user,pass);
            // Step 2.B: Creating JDBC Statement 
            Statement stmt = con.createStatement();
            String query;
            //bags_to_deduct.get(weightsIndex) , sizeOfBags.get(weightsIndex)
            
            query= "UPDATE  Product_details_table SET remaining_weight = ?,update_quantity=update_quantity - ?  WHERE id = ?";
            PreparedStatement pst = con.prepareStatement(query);

            pst.setFloat(1, bags_to_deduct.get(weightsIndex) * sizeOfBags.get(weightsIndex));
            pst.setFloat(2, bagsToDeduct);
            pst.setFloat(3, billNo);
            
            pst.executeUpdate();

        }
           
            catch(Exception e)
            {
                 JOptionPane.showMessageDialog(null, e);
            }
    }
    public void SaveForProfitLoss()
    {
        boolean ifDatainProfitLossTable = false;
        try {
        ResultSet rs = null;
        Class.forName(driver);
        Connection con = DriverManager.getConnection(url, user, pass);
        Statement stmt = con.createStatement();

        String query = null;
        PreparedStatement pst = null;
        
        query = "SELECT TOP 1 date FROM pl_table ORDER BY date DESC";

        java.util.Date d = null;
        rs = stmt.executeQuery(query);
        if(rs.next())
        {
            ifDatainProfitLossTable = true;
            d = rs.getDate("date");
            
        }
        
        ///
        query= "SELECT original_weight ,rate from  product_details_table where howdy = ?";
        pst = con.prepareStatement(query);
        pst.setString(1, howdyNumberfield.getText());
        rs = pst.executeQuery();
        float toDeduct = 0;
        while (rs.next()) {

            String s = rs.getString("original_weight");
            String r = rs.getString("rate");
            toDeduct = toDeduct + (Float.parseFloat(r)* Float.parseFloat(s) );
             
                
// old_weight_p = Float.parseFloat(s);
        }


//
        
        String strMonthOfTable = "0";
        String strYearOfTable = "0" ;
        if(ifDatainProfitLossTable == true)
        {
            SimpleDateFormat extractMonthOfTable = new SimpleDateFormat("MM"); // two digit numerical represenation
            strMonthOfTable= extractMonthOfTable.format(d);                 
            SimpleDateFormat extractYearOfTable = new SimpleDateFormat("YYYY"); // four digit numerical represenation
            strYearOfTable= extractYearOfTable.format(d);     
        }
        

        int monthOfTable = Integer.parseInt(strMonthOfTable);
        int yearOfTable = Integer.parseInt(strYearOfTable);

        java.util.Date now = new java.util.Date();
        SimpleDateFormat extractMonth = new SimpleDateFormat("MM"); // two digit numerical represenation
        String strMonth = extractMonth.format(now);     
        SimpleDateFormat extractYear = new SimpleDateFormat("YYYY"); // four digit numerical represenation
        String strYear = extractYear.format(now);     

        int todaysmonth = Integer.parseInt(strMonth);
        int todaysyear = Integer.parseInt(strYear);
        if (ifDatainProfitLossTable == true)
        {
            if (monthOfTable == todaysmonth && yearOfTable == todaysyear)
            {
                query= "UPDATE  pl_table SET [ordered] =[ordered] + ?  WHERE Year(date)='"+todaysyear+"' AND Month(date)='"+todaysmonth+"'";
                pst=con.prepareStatement(query);

                pst.setFloat(1, toDeduct);

                pst.executeUpdate();

            }
            else if (todaysmonth > monthOfTable && ifDatainProfitLossTable ==true  )
            {
                float old_weight_p = 0;
                query= "SELECT sum(ordered) as previousOrdered from  pl_table";
                pst = con.prepareStatement(query);
                rs = pst.executeQuery();

                if (rs.next()) {

                    String s = rs.getString("previousOrdered");

                    old_weight_p = Float.parseFloat(s);
                }
                query= "INSERT INTO  pl_table (date , ordered , old_weight)  VALUES(?,?,?)";

                pst = con.prepareStatement(query);
                pst.setTimestamp(1, new java.sql.Timestamp(System.currentTimeMillis()));
                pst.setFloat(2, toDeduct);
                pst.setFloat(3, old_weight_p);
                pst.execute();


            }
        }else
        {
        
            query= "INSERT INTO  pl_table (date , ordered, old_weight)  VALUES(?,?,?)";

            pst = con.prepareStatement(query);
            pst.setTimestamp(1, new java.sql.Timestamp(System.currentTimeMillis()));
            pst.setFloat(2, toDeduct);
            pst.setFloat(3, Float.parseFloat("0"));
            pst.execute();
        }
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }

    }
    public void InsertionMine(int index)
    {
            String articleNametoBeStored = NewArtcileNames.get(index);
            try{
            ResultSet rs=null;
            Class.forName(driver);
            Connection con=DriverManager.getConnection(url,user,pass);
            // Step 2.B: Creating JDBC Statement 
            Statement stmt = con.createStatement();
            String query;
            query= "INSERT INTO Product_table(name,type)VALUES(?,?)";
            PreparedStatement pst=con.prepareStatement(query);

            pst.setString(1,articleNametoBeStored );
            pst.setString(2, "Rice");
            pst.execute();
        
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        //Inserting into product details
        try{
            ResultSet rs=null;
            Class.forName(driver);
            Connection con=DriverManager.getConnection(url,user,pass);

            Statement stmt = con.createStatement();
            String query;
            query= "INSERT INTO Product_details_table(name,quantity,weight,supplier_name,rate,receiving,total_cash,old_due,original_weight,remaining_weight,date,location,update_quantity,howdy)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement pst=con.prepareStatement(query);

            
            pst.setString(1,articleNametoBeStored);
            pst.setFloat(2, total_bags_out.get(index));
            pst.setFloat(3, size_out.get(index));
            pst.setString(4,"Mine");
            if (articleNametoBeStored.equalsIgnoreCase("Head Rice"))
            {
                pst.setString(5,onekg.getText());      
            }
            else
            {
                pst.setFloat(5,rate_outVector.get(index));
            }     
            
            pst.setString(6,"0");
            pst.setString(7,"0");
            pst.setString(8,"0");
            pst.setFloat(9, total_bags_out.get(index) *size_out.get(index) );
            pst.setFloat(10,total_bags_out.get(index) *size_out.get(index));
            pst.setTimestamp(11,new java.sql.Timestamp(System.currentTimeMillis()));
            pst.setString(12,locationcombo.getSelectedItem().toString());
            pst.setFloat(13,total_bags_out.get(index));
            pst.setString(14,howdyNumberfield.getText());
            pst.execute();
        
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }             
        
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        for (int i=0;i <=bills.size() -1;i++)
        {
            deduct(bills.get(i) , i);
        }
        for (int i=0;i <=NewArtcileNames.size() -1 ;i++)
        {
            InsertionMine( i );
        }
        
        //weightkgSum
        //Insertion at pl_table
        SaveForProfitLoss();
        //
        
         try{
             if( millchargesfield.getText().isEmpty())
                {
                    millchargesfield.setText("0");
                }
                if( bardanafield.getText().isEmpty())
                {
                    bardanafield.setText("0");
                }
                if( karayafield.getText().isEmpty())
                {
                    karayafield.setText("0");
                }
                if( otherfield.getText().isEmpty())
                {
                    otherfield.setText("0");
                }
                
                float totalExtraKharcha = Float.parseFloat(millchargesfield.getText()) + Float.parseFloat(bardanafield.getText())  + Float.parseFloat(karayafield.getText()) +  Float.parseFloat(otherfield.getText());
                ResultSet rs=null;
                Class.forName(driver);
                Connection con=DriverManager.getConnection(url,user,pass);
                // Step 2.B: Creating JDBC Statement 
                Statement stmt = con.createStatement();
                String query;
                
                //Update cash flow
                PreparedStatement pst = null;
                query = ("UPDATE cash_table SET cash=cash - ? where type=?");
                pst = con.prepareStatement(query);

                // pst.setInt(1, id);
                pst.setFloat(1, totalHeadRiceWeight);
                pst.setString(2, "cash");

                pst.execute();

                // finish cash flow
                
         }
         catch(Exception e)
        {
            //JOptionPane.showMessageDialog(this,e.toString() );                    
        }
        JOptionPane.showMessageDialog(null, "Data added successfully");

        

    }//GEN-LAST:event_jButton5ActionPerformed

    private void totalamountOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalamountOutputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalamountOutputActionPerformed

    private void locationChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationChangeActionPerformed
        // TODO add your handling code here:
        //locationChange
        String newLocation = JOptionPane.showInputDialog(null,
            "New Location", null);
        locationcombo.addItem(newLocation);
        locationcombo.setSelectedItem(newLocation);

    }//GEN-LAST:event_locationChangeActionPerformed

    private void idComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idComboMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_idComboMouseEntered

    private void idComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idComboActionPerformed
        // TODO add your handling code here:
        weightcombo.removeAllItems();
        LoadWeightinKg();
        totla_bags_field.setText("");
        jTextField2.setText("");
        
    }//GEN-LAST:event_idComboActionPerformed
    public void LoadLocation()
    {
         try{
                ResultSet rs=null;
                Class.forName(driver);
                Connection con=DriverManager.getConnection(url,user,pass);
                // Step 2.B: Creating JDBC Statement 
                Statement stmt = con.createStatement();
                String query;

                rs = stmt.executeQuery("SELECT distinct(location) FROM Product_details_table");
               
                while(rs.next()){
                    String s=rs.getString(1);
                    locationcombo.addItem(s);
                }
                
         }
         catch(Exception e)
        {
            //JOptionPane.showMessageDialog(this,e.toString() );                    
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Processing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Processing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Processing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Processing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Processing().setVisible(true);
            }
            
        });
    }
    
     public void LoadArticleNoCombo()
     {
       try
            {
                    Class.forName(driver);
                    Connection con=DriverManager.getConnection(url,user,pass);
                    // Step 2.B: Creating JDBC Statement 
                    Statement stmt = con.createStatement();
                    String query;
                    query= "SELECT distinct name FROM Product_table";
                    PreparedStatement pst=con.prepareStatement(query);

                    ResultSet rs = pst.executeQuery();
                    while(rs.next()){
                        String s=rs.getString(1);
                        articlenocombo.addItem(s);
            }   



            }
           
            catch(Exception e)
            {
             //    JOptionPane.showMessageDialog(null, e);
            }
    }
    public void  LoadWeightinKg()
    {
        /*
        Head Rice
Tota
Naku
Safai
Powder
Komi Safai
Rail Wand
        */
                try
                {
                        Class.forName(driver);
                        Connection con=DriverManager.getConnection(url,user,pass);
                        // Step 2.B: Creating JDBC Statement 
                        Statement stmt = con.createStatement();
                        String query;
                        query= "SELECT original_weight,weight,remaining_weight FROM Product_details_table where name=? and id=? and remaining_weight >0";
                        PreparedStatement pst=con.prepareStatement(query);

                        pst.setString(1, articlenocombo.getSelectedItem().toString());
                        pst.setString(2, idCombo.getSelectedItem().toString());
                        ResultSet rs = pst.executeQuery();

                        while(rs.next()){
                            String s=rs.getString(1);
                            weightcombo.addItem(s);
                            String a =rs.getString(3);
                            remweight = Float.parseFloat(a); //weightcombo.addItem(a);
                            s=rs.getString(2);
                            originalPerBagSize.add(Float.parseFloat(s));
                }   

                }
                catch (SQLException ex) {
//                    JOptionPane.showMessageDialog(null, "Sql exception in processing article name");
//                    JOptionPane.showMessageDialog(null, ex);

                }
                catch(Exception e)
                {
//                     JOptionPane.showMessageDialog(null, e);
                }
           
    }
    int bill_id; float rem_weight, update_quant , ratePerBag;String locat;
    public void LoadSupplierNameAndRate()
    {
        
         
            try
            {
                    Class.forName(driver);
                    Connection con=DriverManager.getConnection(url,user,pass);
                    // Step 2.B: Creating JDBC Statement 
                    Statement stmt = con.createStatement();
                    String query;
                    query= "SELECT supplier_name FROM Product_details_table where name=? and original_weight=? and id=?";
                    PreparedStatement pst=con.prepareStatement(query);

                    pst.setString(1, articlenocombo.getSelectedItem().toString());
                    pst.setString(2, weightcombo.getSelectedItem().toString());
                    pst.setString(3, idCombo.getSelectedItem().toString());
                    ResultSet rs = pst.executeQuery();

                    if(rs.next()){
                        String s=rs.getString(1);
                        supplier_name_field.setText(s);
            }   
             String articleName= articlenocombo.getSelectedItem().toString();
         if (articleName.equals("Head Rice")  || articleName.equals("Tota") || articleName.equals("Naku") || articleName.equals("Safai") || articleName.equals("Powder") || articleName.equals("Komi Safai") || articleName.equals("Rail Wand")) 
         {
                   query= "SELECT rate FROM Product_details_table where name=? and original_weight=? and id=?";
                    pst=con.prepareStatement(query);

                    pst.setString(1, articlenocombo.getSelectedItem().toString());
                    pst.setString(2, weightcombo.getSelectedItem().toString());
                    pst.setString(3, idCombo.getSelectedItem().toString());
                    rs = pst.executeQuery();

                    if(rs.next()){
                        String s=rs.getString(1);
                        rate_field.setText(s);
         }
                    typeOf= true;
                    rateOfProcessed=Float.parseFloat(rate_field.getText());
         }
         else
         {
                    query= "SELECT rate FROM Product_details_table where name=? and original_weight=? and id=?";
                    pst=con.prepareStatement(query);

                    pst.setString(1, articlenocombo.getSelectedItem().toString());
                    pst.setString(2, weightcombo.getSelectedItem().toString());
                    pst.setString(3, idCombo.getSelectedItem().toString());
                    rs = pst.executeQuery();

                    if(rs.next()){
                        String s=rs.getString(1);
                        rate_field.setText(s);
            }
                    typeOf= false;
         }

//                }
                
                query= "SELECT location FROM Product_details_table where name=? and original_weight=? and supplier_name=?";
                pst=con.prepareStatement(query);

                pst.setString(1, articlenocombo.getSelectedItem().toString());
                pst.setString(2, weightcombo.getSelectedItem().toString());
                pst.setString(3, supplier_name_field.getText());
                
                rs = pst.executeQuery();
                    
                if(rs.next()){
                    String s=rs.getString(1);
                    locat=s;
                }
                
                
                query= "SELECT remaining_weight FROM Product_details_table where name=? and original_weight=? and supplier_name=?";
                pst=con.prepareStatement(query);

                pst.setString(1, articlenocombo.getSelectedItem().toString());
                pst.setString(2, weightcombo.getSelectedItem().toString());
                pst.setString(3, supplier_name_field.getText());
                
                rs = pst.executeQuery();
                    
                if(rs.next()){
                    String s=rs.getString(1);                    
                    rem_weight = Float.parseFloat(s);
            }
                query= "SELECT update_quantity FROM Product_details_table where name=? and original_weight=? and supplier_name=?";
                pst=con.prepareStatement(query);

                pst.setString(1, articlenocombo.getSelectedItem().toString());
                pst.setString(2, weightcombo.getSelectedItem().toString());
                pst.setString(3, supplier_name_field.getText());
                
                rs = pst.executeQuery();
                    
                if(rs.next()){
                    String s=rs.getString(1);                    
                    update_quant = Float.parseFloat(s);
            }
                                

            query= "SELECT id,rate FROM Product_details_table where name=? and original_weight=? and supplier_name=?";
                pst=con.prepareStatement(query);

                pst.setString(1, articlenocombo.getSelectedItem().toString());
                pst.setString(2, weightcombo.getSelectedItem().toString());
                pst.setString(3, supplier_name_field.getText());
                
                rs = pst.executeQuery();
                    
                if(rs.next()){
                    String s=rs.getString(1);   
                    idOfProduct= Integer.parseInt(s);
                    
                    s=rs.getString(2);
                    ratePerBag =Float.parseFloat(s);
            }     
                
                                
            //Getting extra rate      
            query= "SELECT oneKg FROM Extra_formula_table where id=?";
                pst=con.prepareStatement(query);

                pst.setInt(1, idOfProduct);
                
                rs = pst.executeQuery();
                    
                if(rs.next()){
                    String s=rs.getString(1);   
                    extra_rate= Float.parseFloat(s);
                    
            }    
                
            }
            catch (SQLException ex) {
//                JOptionPane.showMessageDialog(null, "Sql exception in processing article name");
//                JOptionPane.showMessageDialog(null, ex);
               
            }
            catch(Exception e)
            {
//                 JOptionPane.showMessageDialog(null, e);
            }        
    
    }

    public void AddDataToTableOutPut(boolean check)
    {

            if(check == true)
            {
                Object[] row = { (Float.parseFloat(rate_out.getText())*Float.parseFloat(weightFieldOut.getText())),rate_out.getText() , totla_bags_field_out.getText(),weightFieldOut.getText() , articlenocomboOut.getSelectedItem().toString()};
                DefaultTableModel model = (DefaultTableModel) Output_table.getModel();
                model.addRow(row);
            }
            else if (check == false)
            {
                Object[] row = { "-","-" , totla_bags_field_out.getText(),weightFieldOut.getText(), articlenocomboOut.getSelectedItem().toString()};
                headRice.add(Float.parseFloat(weightFieldOut.getText()));                
                DefaultTableModel model = (DefaultTableModel) Output_table.getModel();
                model.addRow(row);
                totalHeadRiceWeight = Float.parseFloat(weightFieldOut.getText()) ;

            }
            totalamountOutput.setText(Float.toString(getSum(Output_table,0)));
            NewArtcileNames.add(articlenocomboOut.getSelectedItem().toString());
            if (articlenocomboOut.getSelectedItem().toString().equalsIgnoreCase("Head Rice"))
            {
                rate_outVector.add(Float.parseFloat("0"));
            }
            else
            {
                rate_outVector.add(Float.parseFloat(rate_out.getText()));        
            }
                
            total_bags_out.add(Float.parseFloat(totla_bags_field_out.getText()));
            size_out.add(Float.parseFloat(sizefieldout.getText()));
            weight_out.add(Float.parseFloat(weightFieldOut.getText()));
    
    }
    
    public void AddDataToTable()
    {
//            getSum(input_processing_table,1)
            if (typeOf == true)
            {
            
                float weightOfBags = (rem_weight/update_quant)*Float.parseFloat( totla_bags_field.getText());
                Object[] row = { (weightOfBags)*rateOfProcessed, rateOfProcessed ,totla_bags_field.getText(),weightOfBags, articlenocombo.getSelectedItem().toString()};
                DefaultTableModel model = (DefaultTableModel) input_processing_table.getModel();
                model.addRow(row);
                bagsSum.setText(Float.toString(getSum(input_processing_table,2)));
                weightkgSum.setText(Float.toString(getSum(input_processing_table,3)));
                totalamountInput.setText(Float.toString(getSum(input_processing_table,0)));
                weights.add(weightOfBags);
                rateweightsForPL =rateweightsForPL + (weightOfBags * rateOfProcessed);
                
                Oweights.add(Float.parseFloat(weightcombo.getSelectedItem().toString()));            

            }
            else
            {
                float weightOfBags = (rem_weight/update_quant)*Float.parseFloat( totla_bags_field.getText());
                Object[] row = { (weightOfBags)*extra_rate, extra_rate ,totla_bags_field.getText(),weightOfBags, articlenocombo.getSelectedItem().toString()};
                DefaultTableModel model = (DefaultTableModel) input_processing_table.getModel();
                model.addRow(row);
                bagsSum.setText(Float.toString(getSum(input_processing_table,2)));
                weightkgSum.setText(Float.toString(getSum(input_processing_table,3)));
                totalamountInput.setText(Float.toString(getSum(input_processing_table,0)));
                weights.add(weightOfBags);
                Oweights.add(Float.parseFloat(weightcombo.getSelectedItem().toString()));            
            }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Output_table;
    private javax.swing.JLabel articleLabel1;
    private javax.swing.JComboBox<String> articlenocombo;
    private javax.swing.JComboBox<String> articlenocomboOut;
    private javax.swing.JTextField bagsSum;
    private javax.swing.JTextField bardanafield;
    private javax.swing.JTextField fiftykg;
    private javax.swing.JTextField fortykg;
    private javax.swing.JTextField howdyNumberfield;
    private javax.swing.JComboBox<String> idCombo;
    private javax.swing.JLabel inputBagFieldRate;
    private javax.swing.JPanel inputProcessing;
    private javax.swing.JPanel inputProcessing2;
    private javax.swing.JTable input_processing_table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField karayafield;
    private javax.swing.JButton locationChange;
    private javax.swing.JComboBox<String> locationcombo;
    private javax.swing.JTextField millchargesfield;
    private javax.swing.JTextField onekg;
    private javax.swing.JTextField otherfield;
    private javax.swing.JLabel rate_field;
    private javax.swing.JTextField rate_out;
    private javax.swing.JTextField sizefieldout;
    private javax.swing.JLabel supplier_name_field;
    private javax.swing.JTextField totalamountInput;
    private javax.swing.JTextField totalamountOutput;
    private javax.swing.JTextField totla_bags_field;
    private javax.swing.JTextField totla_bags_field_out;
    private javax.swing.JTextField weightFieldOut;
    private javax.swing.JComboBox<String> weightcombo;
    private javax.swing.JTextField weightkgSum;
    // End of variables declaration//GEN-END:variables
}
