/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ali_rice;

import java.sql.Connection;
import java.sql.DriverManager;
import java.util.*;
 
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.util.Date;
import java.util.Properties;
 
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.mail.*;
import javax.mail.internet.*;
import javax.mail.internet.MimeMessage;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author JAMAL
 */
public class BalanceSheet extends javax.swing.JFrame {

    /**
     * Creates new form BalanceSheet
     */
    String year,month;
    float boughtProduct , soldProduct, diff;
    public BalanceSheet() {
        initComponents();
        LoadCapital();
        LoadRvable();
        LoadPyable();
        LoadStock();
        LoadAdvancedExpense();
        LoadLoan();
        LoadProfit();
        LoadAdvanceIncome();
        LoadCash();
        LoadAccuredIncome();
//        LoadCurrentAssets();
//        LoadLiabilityAssets();
//        LoadProfit();
//        LoadDifferenceBetweenBoughtAndSold();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        currentfield2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        currentfield3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cashflowfield = new javax.swing.JTextField();
        rvfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        stockfield = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        adexpensefield = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        adincomefield = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        accruedexpensefield = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        loanfield = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        capitalfield = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        pyfield = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Business Balance Sheet");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Liabilities and Owner's equity");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Assets");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Current");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Non Current");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(59, 59, 59))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(204, 204, 204))
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(currentfield3, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(currentfield2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addGap(44, 44, 44)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(46, 46, 46)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(currentfield2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(currentfield3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(308, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Business Balance Sheet");

        jSeparator1.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Cash");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Receiveable");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Stock");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Advanced expense");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Assets");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stockfield, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                                .addComponent(rvfield, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cashflowfield, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(adexpensefield, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cashflowfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rvfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(stockfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(adexpensefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Advanced income");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Accrued expense");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Loan");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("Capital");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Payable");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Liabilities and Owner's equity");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel21.setText("EQUITY");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(57, 57, 57))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel11))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(pyfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(adincomefield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel17)
                                    .addGap(40, 40, 40)
                                    .addComponent(accruedexpensefield, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(loanfield, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(capitalfield, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(21, 21, 21)))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(pyfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(adincomefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(accruedexpensefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(loanfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(capitalfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jButton1)))
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(276, 276, 276))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        Email();
     
    }//GEN-LAST:event_jButton1ActionPerformed
    String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    String url = "jdbc:sqlserver://localhost:1433;databaseName=AliDB";
    String user = "l134088";
    String pass = "sofabulous12";
    
    public void LoadProfit()
    {
        /*
        float soldPrice = 0; 
        //Load sold prices
        //Getting month
        int month = monthNum(monthcombo.getSelectedItem().toString());
        
        //Get year
        int year = Integer.parseInt(yearcombo.getSelectedItem().toString());
        float totalbillprice = 0,salesreturn = 0,totalsum=0;
        try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();            
            
            String query = "SELECT SUM(total_rice_price) as Sold_Prices FROM Order_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                String d = rs.getString("Sold_Prices");
                totalbillprice = Float.parseFloat(d);
            }
            query = "SELECT weight , rate FROM return_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String w = rs.getString("weight");
                String r = rs.getString("rate");
                totalsum = totalsum + (Float.parseFloat(w)*Float.parseFloat(r));
                
            }
            float finalsalesprice = totalbillprice - totalsum;
            soldPrice  = ((finalsalesprice));
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.toString() );                    
        } 
        //
        //Load Purchases
        int month = monthNum(monthcombo.getSelectedItem().toString());

            //Get year
            int year = Integer.parseInt(yearcombo.getSelectedItem().toString());
            float totalPurchasedBill = 0 , r=0 , sumP =0;
            try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();
            String query = "SELECT SUM(total_amount) as finalStuff FROM Extra_formula_table";

            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                String d = rs.getString("finalStuff");
                totalPurchasedBill = Float.parseFloat(d);
                
            }
            
            query = "SELECT weight , rate FROM purchase_return_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String nw = rs.getString("weight");
                String nr = rs.getString("rate");
                sumP = sumP + (Float.parseFloat(nw)*Float.parseFloat(nr));
                
            }
            
            }
             catch( Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            float purchased = totalPurchasedBill - sumP;
        //    
        //Load OC Stock
        float sumOW =0 ,weightOR=0,weightReturned =0 ,weightOfMonth=0 ;
        try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();String query=null;

            Date now = new Date();
            SimpleDateFormat extractMonth = new SimpleDateFormat("MM"); // two digit numerical represenation
            String strMonth = extractMonth.format(now);     
            SimpleDateFormat extractYear = new SimpleDateFormat("YYYY"); // four digit numerical represenation
            String strYear = extractYear.format(now);     

            int todaysmonth = Integer.parseInt(strMonth);
            int todaysyear = Integer.parseInt(strYear);
            query = "SELECT ordered,old_weight  FROM pl_table WHERE Year(date)='"+todaysyear+"' AND Month(date)='"+todaysmonth+"'";

            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                String a = rs.getString("ordered");
                String b = rs.getString("old_weight");
                closingstockfield.setText(Float.toString(Float.parseFloat(b)+ Float.parseFloat(a)));
                openingstockfield.setText(b);
//                   newOrder = Float.parseFloat(a);
            }


            
        }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }   
        //
        ///
        float purchases = Float.parseFloat(purcahasesfield.getText());
        float os = Float.parseFloat(openingstockfield.getText()); //opening stock
        float cs = Float.parseFloat(closingstockfield.getText()); // closing 
        float cos =(purchases+ os)  - cs; //cost of sales
        float sales = Float.parseFloat(salesfield.getText());
        float grossProfit =(sales- cos);
        grossprofitfield.setText(Float.toString( grossProfit) );
        float expensesExtractedFromTable = CutDownExpense();
        float profitORloss = grossProfit - expensesExtractedFromTable;
        
        if (profitORloss >0)
        {
            profitfield.setText(Float.toString(profitORloss)); //if profit exist
            profitfield.setEnabled(false);
            lossfield.setEnabled(false);
            
        }else if(profitORloss < 0)
        {
            lossfield.setText(Float.toString(profitORloss));
            profitfield.setEnabled(false);
            lossfield.setEnabled(false);
        }else
        {
            profitfield.setText("0");
            lossfield.setText("0");
            profitfield.setEnabled(false);
            lossfield.setEnabled(false);
        }

*/
        ////
    }
    public void LoadRvable()
    {
        try {
                ResultSet rs = null;
                Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
                // Step 2.B: Creating JDBC Statement
                Statement stmt = con.createStatement();
                String query;
                float totalrec = 0;
                rs = stmt.executeQuery("SELECT due FROM Customer_table where due >=0");
                //boolean ifYetCapitalExists = false;
                String r = "0";
                while (rs.next()) {
                    r = rs.getString("due");
                    //rvfield.setText(r);
                    totalrec= totalrec + Float.parseFloat(r);
                }
                rvfield.setText(Float.toString(totalrec));
    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    
    }
    public void LoadAccuredIncome()
    {
        try {
                ResultSet rs = null;
                Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
                // Step 2.B: Creating JDBC Statement
                Statement stmt = con.createStatement();
                String query;
                float totalrec = 0;
                rs = stmt.executeQuery("SELECT SUM(ac_cost) as accuredCost FROM ac_cost_table");
                //boolean ifYetCapitalExists = false;
                String r = "0";
                if (rs.next()) {
                    r = rs.getString("accuredCost");
                    accruedexpensefield.setText(r);
                    
                }
                
    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    
    }
    public void LoadAdvanceIncome()
    {
        try {
                ResultSet rs = null;
                Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
                // Step 2.B: Creating JDBC Statement
                Statement stmt = con.createStatement();
                String query;
                float totalrec = 0;
                rs = stmt.executeQuery("SELECT due FROM Customer_table where due < 0");
                //boolean ifYetCapitalExists = false;
                String r = "0";
                while (rs.next()) {
                    r = rs.getString("due");
                    //rvfield.setText(r);
                    totalrec= totalrec + Float.parseFloat(r);
                }
                totalrec= totalrec *-1; //show it into +ve
                adincomefield.setText(Float.toString(totalrec));
    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    
    }
public void LoadPyable()
{
    try {
            ResultSet rs = null;
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            // Step 2.B: Creating JDBC Statement
            Statement stmt = con.createStatement();
            String query;

            rs = stmt.executeQuery("SELECT dues FROM Supplier_table where dues>=0");
            //boolean ifYetCapitalExists = false;
            float t =0;
            String r ="0";
            while (rs.next()) {
                r= rs.getString("dues");
                //pyfield.setText(r);
                t=t + Float.parseFloat(r);
            }
            pyfield.setText(Float.toString(t));

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.toString());
    }

}

public void LoadCash()
{
    try {
            ResultSet rs = null;
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            // Step 2.B: Creating JDBC Statement
            Statement stmt = con.createStatement();
            String query;

            query = ("SELECT cash FROM cash_table where type=?");
            //boolean ifYetCapitalExists = false;
            
            PreparedStatement pst = con.prepareStatement(query);
            
            pst.setString(1, "cash");
            
            rs = pst.executeQuery();
            if (rs.next()) {
                String r = rs.getString("cash");
                cashflowfield.setText(r);

            }


    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.toString());
    }

}

    public void LoadLoan()
    {
        try {
                ResultSet rs = null;
                Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
                // Step 2.B: Creating JDBC Statement
                Statement stmt = con.createStatement();
                String query;

                rs = stmt.executeQuery("SELECT SUM(loan_amount) as totalLoan FROM loan_table");
                //boolean ifYetCapitalExists = false;
                if (rs.next()) {
                    String r = rs.getString("totalLoan");
                    loanfield.setText(r);
                    
                }

    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    
    }
    public void LoadAdvancedExpense()
    {
        try {
                ResultSet rs = null;
                Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
                // Step 2.B: Creating JDBC Statement
                Statement stmt = con.createStatement();
                String query;

                rs = stmt.executeQuery("SELECT SUM(ad_cost) as totaladCost FROM ad_cost_table");
                //boolean ifYetCapitalExists = false;
                if (rs.next()) {
                    String r = rs.getString("totaladCost");
                    adexpensefield.setText(r);
                    
                }

    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    
    }
    public void ShowData()
    {
        String driver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
        String url="jdbc:sqlserver://localhost:1433;databaseName=AliDB";
        String user="l134088";
        String pass="sofabulous12";
        Connection con = null;
        //Getting month
       
        try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();
            String query = "SELECT * FROM Expenses_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String d = rs.getString("date");
                String e = rs.getString("name");
                String f = rs.getString("cost");
              
           
            }

            
         }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.toString() );                    
        }
        
    }
    
    private int monthNum(String s)
    {
        if(s.equals("January"))
            return 1;
        else if(s.equals("February"))
            return 2;
        else if(s.equals("March"))
            return 3;
        else if(s.equals("April"))
            return 4;
        else if(s.equals("May"))
            return 5;
        else if(s.equals("June"))
            return 6;
        else if(s.equals("July"))
            return 7;
        else if(s.equals("August"))
            return 8;
        else if(s.equals("September"))
            return 9;
        else if(s.equals("October"))
            return 10;
        else if(s.equals("November"))
            return 11;
        else if(s.equals("December"))
            return 12;
        return 0;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BalanceSheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BalanceSheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BalanceSheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BalanceSheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BalanceSheet().setVisible(true);
            }
        });
    }
    public void LoadCapital()
    {
            try {
                ResultSet rs = null;
                Class.forName(driver);
                Connection con = DriverManager.getConnection(url, user, pass);
                // Step 2.B: Creating JDBC Statement
                Statement stmt = con.createStatement();
                String query = null;

                query =("SELECT cash FROM cash_table where type=?");
                
                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, "capital");
                rs = pst.executeQuery();

                boolean ifYetCapitalExists = false;
                if (rs.next()) {
                    String r = rs.getString("cash");
                    capitalfield.setText(r);
                    ifYetCapitalExists = true;
                }
                if (ifYetCapitalExists == false)
                {
                    capitalfield.setText("0");
                }
    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    }
    
    public void LoadStock()
    {
     try {
            ResultSet rs = null;
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            // Step 2.B: Creating JDBC Statement
            Statement stmt = con.createStatement();
            String query;

            rs = stmt.executeQuery("SELECT rate , remaining_weight FROM Product_details_table");
            float sumOfRateAndRemainingWeight = 0, mul;String ra,re;
            while (rs.next()) {
                ra = rs.getString(1);
                re = rs.getString(2);
                mul = Float.parseFloat(ra)* Float.parseFloat(re);
                sumOfRateAndRemainingWeight = sumOfRateAndRemainingWeight + mul;
            }
            stockfield.setText(Float.toString(sumOfRateAndRemainingWeight));
    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }

    }    
    
    public void LoadLiabilityAssets()
    {
     try {
            ResultSet rs = null;
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            // Step 2.B: Creating JDBC Statement
            Statement stmt = con.createStatement();
            String query;

            rs = stmt.executeQuery("SELECT sum(dues) FROM Supplier_table");
            
            if (rs.next()) {
                String ra = rs.getString(1);
           
                pyfield.setText(ra);
            }
  
    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    }
    public void LoadDifferenceBetweenBoughtAndSold()
    {
        
        
        
    }
    public void Email()
    {
           try{
            String host ="smtp.gmail.com" ;
            String user = "jamalbutt1232@gmail.com";
            String pass = "Blackberrya600";
            String to = "aliboy316@gmail.com";
            String from = "jamalbutt1232@gmail.com";
            String subject = "Mustafe";
            String messageText = "Your Is Test Email :";
            boolean sessionDebug = false;

            Properties props = System.getProperties();

            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", host);
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.required", "true");

            java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
            Session mailSession ;
            mailSession = Session.getDefaultInstance(props, null);
            mailSession.setDebug(sessionDebug);
            Message msg = new MimeMessage(mailSession);
            msg.setFrom(new InternetAddress(from));
            InternetAddress[] address = {new InternetAddress(to)};
            msg.setRecipients(Message.RecipientType.TO, address);
            msg.setSubject(subject); msg.setSentDate(new Date());
            msg.setText(messageText);
            // Create the message part
           BodyPart messageBodyPart = new MimeBodyPart();

         // Now set the actual message
            messageBodyPart.setText("This is message body");
           Multipart multipart = new MimeMultipart();

         // Set text message part
           multipart.addBodyPart( (messageBodyPart));
           String filename = "/C://Users//JAMAL//Contacts//Downloads//Email//Email//src//SendEmail//1.java";
           DataSource source = new FileDataSource(filename);
           messageBodyPart.setDataHandler(new DataHandler(source));
           messageBodyPart.setFileName(filename);
           multipart.addBodyPart(messageBodyPart);

         // Send the complete message parts
            msg.setContent(multipart);
            
           Transport transport=mailSession.getTransport("smtp");
           transport.connect(host, user, pass);
           transport.sendMessage(msg, msg.getAllRecipients());
           transport.close();
           System.out.println("message send successfully");
        }catch(Exception ex)
        {
            System.out.println(ex);
        
        }
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accruedexpensefield;
    private javax.swing.JTextField adexpensefield;
    private javax.swing.JTextField adincomefield;
    private javax.swing.JTextField capitalfield;
    private javax.swing.JTextField cashflowfield;
    private javax.swing.JTextField currentfield2;
    private javax.swing.JTextField currentfield3;
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField loanfield;
    private javax.swing.JTextField pyfield;
    private javax.swing.JTextField rvfield;
    private javax.swing.JTextField stockfield;
    // End of variables declaration//GEN-END:variables
}
