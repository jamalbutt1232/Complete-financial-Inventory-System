/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ali_rice;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAMAL
 */
public class Expenses_ledger extends javax.swing.JFrame {

    /**
     * Creates new form Expenses_ledger
     */
    public Expenses_ledger() {
        initComponents();
        initYears();
        Loadcombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        expensescombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expenses_ledger_table = new javax.swing.JTable();
        yearcombo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        monthcombo = new javax.swing.JComboBox<>();
        totalcostfield = new javax.swing.JTextField();
        show1 = new javax.swing.JButton();
        show = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(900, 700));

        expensescombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        expensescombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        expensescombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expensescomboActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Select Expense");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Expenses Ledger");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Select Year");

        expenses_ledger_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Name", "Cost"
            }
        ));
        jScrollPane1.setViewportView(expenses_ledger_table);

        yearcombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        yearcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        yearcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearcomboActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Select Month");

        monthcombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        monthcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "Feburary", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        monthcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthcomboActionPerformed(evt);
            }
        });

        totalcostfield.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(292, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(totalcostfield, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(expensescombo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(274, 274, 274))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(69, 69, 69)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(yearcombo, 0, 118, Short.MAX_VALUE)
                            .addComponent(monthcombo, 0, 118, Short.MAX_VALUE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 276, Short.MAX_VALUE)
                .addComponent(expensescombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147)
                .addComponent(totalcostfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(monthcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(54, 54, 54)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(yearcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(39, 39, 39)
                            .addComponent(jLabel4))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(65, Short.MAX_VALUE)))
        );

        show1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        show1.setText("Print");
        show1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show1ActionPerformed(evt);
            }
        });

        show.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        show.setText("Show All");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(show1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(230, 230, 230))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(show1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
  String driver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
        String url="jdbc:sqlserver://localhost:1433;databaseName=AliDB";
        String user="admin";
        String pass="jamalbutt1232";
        Connection con = null;
    public void Loadcombo()
    {
        try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();
            String query = "SELECT name FROM Expenses_table";

            rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String d = rs.getString("name");
                expensescombo.addItem(d);
            }

            
         }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.toString() );                    
        }    
    }
    
    
    public void ShowData()
    {
        String driver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
        String url="jdbc:sqlserver://localhost:1433;databaseName=AliDB";
    String user="l134088";
    String pass="sofabulous12";

        Connection con = null;
        //Getting month
        int month = monthNum(monthcombo.getSelectedItem().toString());
        
        //Get year
        int year = Integer.parseInt(yearcombo.getSelectedItem().toString());
        DefaultTableModel model = (DefaultTableModel) expenses_ledger_table.getModel();
            
        model.setRowCount(0);
        expenses_ledger_table.setModel(model);
        try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();
            String query = "SELECT * FROM Expenses_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"' and name='"+expensescombo.getSelectedItem().toString()+"'";

            rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String d = rs.getString("date");
                String e = rs.getString("name");
                String f = rs.getString("cost");
              
                model.addRow(new Object[]{d, e, f});
            }

            
         }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.toString() );                    
        }
        
        
        
        
    }
    
    
    private void initYears() {
        for(int i=0;i<50;i++)
        {
            yearcombo.addItem(Integer.toString(2019+i));
        }
    }
    private Integer monthNum(String s)
    {
        if(s.equals("January"))
            return 1;
        else if(s.equals("Feburary"))
            return 2;
        else if(s.equals("March"))
            return 3;
        else if(s.equals("April"))
            return 4;
        else if(s.equals("May"))
            return 5;
        else if(s.equals("June"))
            return 6;
        else if(s.equals("July"))
            return 7;
        else if(s.equals("August"))
            return 8;
        else if(s.equals("September"))
            return 9;
        else if(s.equals("October"))
            return 10;
        else if(s.equals("November"))
            return 11;
        else if(s.equals("December"))
            return 12;
        return null;
    }
    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
        
        //Getting month
        int month = monthNum(monthcombo.getSelectedItem().toString());
        
        //Get year
        int year = Integer.parseInt(yearcombo.getSelectedItem().toString());
        
        DefaultTableModel model = (DefaultTableModel) expenses_ledger_table.getModel();
            
        model.setRowCount(0);
        expenses_ledger_table.setModel(model);
        
        String driver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
        String url="jdbc:sqlserver://localhost:1433;databaseName=AliDB";
            String user="l134088";
    String pass="sofabulous12";

        Connection con = null;

         try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();
            String query = "SELECT * FROM Expenses_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String d = rs.getString("date");
                String e = rs.getString("name");
                String f = rs.getString("cost");
              
                model.addRow(new Object[]{d, e, f});
            }

            
         }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.toString() );                    
        }
        totalcostfield.setText(Float.toString(getSum(expenses_ledger_table, 2)));
       
    }//GEN-LAST:event_showActionPerformed

    private void monthcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthcomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthcomboActionPerformed

    private void expensescomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expensescomboActionPerformed
        // TODO add your handling code here:'ShowData
        ShowData();
        totalcostfield.setText(Float.toString(getSum(expenses_ledger_table, 2)));        
    }//GEN-LAST:event_expensescomboActionPerformed
   public float getSum(JTable table,int colNo)
   {
            float sumForcash=0; float num;
            for(int i=0;i<table.getRowCount();i++)
            {
                if (!table.getValueAt(i, colNo).toString().equals("-"))
                {
                    num=Float.parseFloat(table.getValueAt(i, colNo).toString());
                    sumForcash=sumForcash+num;
                }

            }

            return sumForcash;	
   }
    private void show1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show1ActionPerformed
        // TODO add your handling code here:
                 //Printing
        PrinterJob jb=PrinterJob.getPrinterJob();
        jb.setJobName("Printable");
        jb.setPrintable(new Printable(){
            public int print(Graphics g,PageFormat pf,int num){
              //  Bill1 b=new Bill1(customernamefield.getSelectedItem().toString());
                if(num>0){
                    return Printable.NO_SUCH_PAGE;
                }
                
                Graphics2D g2=(Graphics2D)g;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(.82, 1.0);
                   //b.setDefaultCloseOperation( DISPOSE_ON_CLOSE );
                  // b.setVisible(true);
                jPanel1.paint(g2);
              // b.dispose();
                return Printable.PAGE_EXISTS;
            }
        });
        boolean ok=jb.printDialog();
        if(ok){
            JOptionPane.showMessageDialog(null, "Printing...");
            try{
                jb.print();

                JOptionPane.showMessageDialog(null, "Printing Complete...");
            }
            catch(PrinterException ex)
            {
                JOptionPane.showMessageDialog(null, ex);
            }
        }    
        
    }//GEN-LAST:event_show1ActionPerformed

    private void yearcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearcomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearcomboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Expenses_ledger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Expenses_ledger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Expenses_ledger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Expenses_ledger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Expenses_ledger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable expenses_ledger_table;
    private javax.swing.JComboBox<String> expensescombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> monthcombo;
    private javax.swing.JButton show;
    private javax.swing.JButton show1;
    private javax.swing.JTextField totalcostfield;
    private javax.swing.JComboBox<String> yearcombo;
    // End of variables declaration//GEN-END:variables
}
