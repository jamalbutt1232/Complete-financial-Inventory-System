/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ali_rice;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author JAMAL
 */
public class Profit_Loss extends javax.swing.JFrame {

    /**
     * Creates new form Profit_Loss
     */
    float allpurchase =0, allstock =0;
    public Profit_Loss() {
        initComponents();
        initYears();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initYears() {
        for(int i=0;i<50;i++)
        {
            yearcombo.addItem(Integer.toString(2019+i));
        }
    }
    private Integer monthNum(String s)
    {
        if(s.equals("January"))
            return 1;
        else if(s.equals("Feburary"))
            return 2;
        else if(s.equals("March"))
            return 3;
        else if(s.equals("April"))
            return 4;
        else if(s.equals("May"))
            return 5;
        else if(s.equals("June"))
            return 6;
        else if(s.equals("July"))
            return 7;
        else if(s.equals("August"))
            return 8;
        else if(s.equals("September"))
            return 9;
        else if(s.equals("October"))
            return 10;
        else if(s.equals("November"))
            return 11;
        else if(s.equals("December"))
            return 12;
        return null;
    }
    
    String driver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
    String url="jdbc:sqlserver://localhost:1433;databaseName=AliDB";
    String user="l134088";
    String pass="sofabulous12";

    Connection con = null;
    
    public void LoadPurchases()
    {
            int month = monthNum(monthcombo.getSelectedItem().toString());

            //Get year
            int year = Integer.parseInt(yearcombo.getSelectedItem().toString());
            float totalPurchasedBill = 0 , r=0 , sumP =0;
            try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();
            String query = "SELECT SUM(total_amount) as finalStuff FROM Extra_formula_table";

            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                String d = rs.getString("finalStuff");
                totalPurchasedBill = Float.parseFloat(d);
                
            }
            
            query = "SELECT weight , rate FROM purchase_return_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String nw = rs.getString("weight");
                String nr = rs.getString("rate");
                sumP = sumP + (Float.parseFloat(nw)*Float.parseFloat(nr));
                
            }
            
            }
             catch( Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            float finalsalesprice = totalPurchasedBill - sumP;
            purcahasesfield.setText(Float.toString(finalsalesprice));
    }
    public void LoadSoldPrices()
    {
        
        //Getting month
        int month = monthNum(monthcombo.getSelectedItem().toString());
        
        //Get year
        int year = Integer.parseInt(yearcombo.getSelectedItem().toString());
        float totalbillprice = 0,salesreturn = 0,totalsum=0;
        try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();            
            
            String query = "SELECT SUM(total_rice_price) as Sold_Prices FROM Order_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                String d = rs.getString("Sold_Prices");
                totalbillprice = Float.parseFloat(d);
            }
            query = "SELECT weight , rate FROM return_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            while(rs.next())
            {
                String w = rs.getString("weight");
                String r = rs.getString("rate");
                totalsum = totalsum + (Float.parseFloat(w)*Float.parseFloat(r));
                
            }
            float finalsalesprice = totalbillprice - totalsum;
            salesfield.setText(Float.toString(finalsalesprice));
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.toString() );                    
        } 
    
    
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        purcahasesfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        salesfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        openingstockfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        closingstockfield = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        grossprofitfield = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        profitfield = new javax.swing.JTextField();
        lossfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        monthcombo = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        yearcombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Profit & Loss");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Cost of sales");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Purchases");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Sales");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel2)
                .addGap(44, 44, 44)
                .addComponent(salesfield, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salesfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Opening stock");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Closing stock");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Gross profit");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setForeground(new java.awt.Color(204, 204, 204));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Loss");

        lossfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lossfieldActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Profit");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(profitfield, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(lossfield))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(profitfield, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lossfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Select Month");

        monthcombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        monthcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "Feburary", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        monthcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthcomboActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Select Year");

        yearcombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        yearcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        yearcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearcomboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(monthcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(48, 48, 48)
                                .addComponent(purcahasesfield, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(closingstockfield)
                                    .addComponent(openingstockfield)
                                    .addComponent(grossprofitfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(188, 188, 188))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yearcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(217, 217, 217))))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(monthcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(yearcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(purcahasesfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(openingstockfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(closingstockfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(grossprofitfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 145, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lossfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lossfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lossfieldActionPerformed

    private void monthcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthcomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthcomboActionPerformed

    public void LoadOCStock()
    {
        int month = monthNum(monthcombo.getSelectedItem().toString());

            //Get year
        int year = Integer.parseInt(yearcombo.getSelectedItem().toString());
        float sumOW =0 ,weightOR=0,weightReturned =0 ,weightOfMonth=0 ;
        try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();String query=null;

            Date now = new Date();
            SimpleDateFormat extractMonth = new SimpleDateFormat("MM"); // two digit numerical represenation
            String strMonth = extractMonth.format(now);     
            SimpleDateFormat extractYear = new SimpleDateFormat("YYYY"); // four digit numerical represenation
            String strYear = extractYear.format(now);     

            int todaysmonth = Integer.parseInt(strMonth);
            int todaysyear = Integer.parseInt(strYear);
            query = "SELECT ordered,old_weight  FROM pl_table WHERE Year(date)='"+todaysyear+"' AND Month(date)='"+todaysmonth+"'";

            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                String a = rs.getString("ordered");
                String b = rs.getString("old_weight");
                closingstockfield.setText(Float.toString(Float.parseFloat(b)+ Float.parseFloat(a)));
                openingstockfield.setText(b);
//                   newOrder = Float.parseFloat(a);
            }


            
        }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
    
    
    }
     
    public float CutDownExpense()
    {
        //Getting month
        int month = monthNum(monthcombo.getSelectedItem().toString());
        
        //Get year
        int year = Integer.parseInt(yearcombo.getSelectedItem().toString());
        float totalexpensescostOfMonthFromExpense = 0,totalexpensescostOfMonthFromAdCost =0 ,totalexpensescostOfMonthFromAcCost=0;
        try{
            ResultSet rs=null;
            Class.forName(driver);
            con=DriverManager.getConnection(url,user,pass);
            Statement stmt = con.createStatement();
            String query = "SELECT SUM(cost) as  totalExpensesCost FROM Expenses_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                String d = rs.getString("totalExpensesCost");
                
                totalexpensescostOfMonthFromExpense = Float.parseFloat(d);
            }
            
            query = "SELECT SUM(ad_cost) as  totalADExpensesCost FROM ad_cost_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                String d = rs.getString("totalADExpensesCost");
                
                totalexpensescostOfMonthFromAdCost = Float.parseFloat(d);
            }
            query = "SELECT SUM(ac_cost) as  totalACExpensesCost FROM ac_cost_table WHERE Year(date)='"+year+"' AND Month(date)='"+month+"'";

            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                String d = rs.getString("totalADExpensesCost");
                
                totalexpensescostOfMonthFromAcCost = Float.parseFloat(d);
            }
            

            
         }catch(Exception e)
         {
             JOptionPane.showMessageDialog(null,e);
         }
        return totalexpensescostOfMonthFromExpense + totalexpensescostOfMonthFromAdCost  + totalexpensescostOfMonthFromAcCost;
    }
    private void yearcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearcomboActionPerformed
        // TODO add your handling code here:
        LoadSoldPrices(); LoadPurchases();LoadOCStock(); 
        
        //calculating gross profit:
        float purchases = Float.parseFloat(purcahasesfield.getText());
        float os = Float.parseFloat(openingstockfield.getText()); //opening stock
        float cs = Float.parseFloat(closingstockfield.getText()); // closing 
        float cos =(purchases+ os)  - cs; //cost of sales
        float sales = Float.parseFloat(salesfield.getText());
        float grossProfit =(sales- cos);
        grossprofitfield.setText(Float.toString( grossProfit) );
        float expensesExtractedFromTable = CutDownExpense();
        float profitORloss = grossProfit - expensesExtractedFromTable;
        
        if (profitORloss >0)
        {
            profitfield.setText(Float.toString(profitORloss)); //if profit exist
            profitfield.setEnabled(false);
            lossfield.setEnabled(false);
            
        }else if(profitORloss < 0)
        {
            lossfield.setText(Float.toString(profitORloss));
            profitfield.setEnabled(false);
            lossfield.setEnabled(false);
        }else
        {
            profitfield.setText("0");
            lossfield.setText("0");
            profitfield.setEnabled(false);
            lossfield.setEnabled(false);
        }
    }//GEN-LAST:event_yearcomboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Profit_Loss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Profit_Loss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Profit_Loss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Profit_Loss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profit_Loss().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField closingstockfield;
    private javax.swing.JTextField grossprofitfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField lossfield;
    private javax.swing.JComboBox<String> monthcombo;
    private javax.swing.JTextField openingstockfield;
    private javax.swing.JTextField profitfield;
    private javax.swing.JTextField purcahasesfield;
    private javax.swing.JTextField salesfield;
    private javax.swing.JComboBox<String> yearcombo;
    // End of variables declaration//GEN-END:variables
}
